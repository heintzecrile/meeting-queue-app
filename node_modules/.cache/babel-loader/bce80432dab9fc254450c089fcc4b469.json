{"ast":null,"code":"/**\n *\n * Text\n *\n */\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { textColor } from \"./theme\";\nimport typography, { fontSize } from \"./typography\";\nexport const defaultProps = {\n  color: textColor.primary,\n  display: \"block\",\n  fontFamily: \"Lato\",\n  fontSize: \"main\",\n  letterSpacing: typography.letterSpacing,\n  lineHeight: typography.lineHeight,\n  fontStyle: \"normal\"\n};\nconst Text = styled.span`\n  color: ${props => props.color};\n  display: ${props => props.display};\n  font-size: ${props => props.customSize ? `${props.customSize}px` : `${fontSize[props.fontSize]}`};\n  font-style: ${props => props.fontStyle};\n  letter-spacing: ${props => `${props.letterSpacing}px`};\n  line-height: ${props => props.lineHeight};\n  margin: 0;\n  text-align: ${props => props.textAlign};\n  text-decoration: ${props => props.textDecoration};\n  text-transform: ${props => props.textTransform};\n  font-weight: ${props => props.fontWeight};\n  word-break: ${props => props.wordBreak};\n  cursor: ${props => props.cursor};\n  pointer-events: ${props => props.pointerEvents};\n`;\nText.propTypes = {\n  color: PropTypes.string,\n  customSize: PropTypes.number,\n  // custom size, not recommended to be used for consistency\n  display: PropTypes.oneOf([\"block\", \"inline\", \"inline-block\"]),\n  fontFamily: PropTypes.oneOf([\"bold\", \"light\", \"main\"]),\n  fontSize: PropTypes.oneOf(Object.keys(fontSize)),\n  letterSpacing: PropTypes.number,\n  lineHeight: PropTypes.number,\n  textAlign: PropTypes.oneOf([\"left\", \"center\", \"right\", \"justify\"]),\n  textDecoration: PropTypes.oneOf([\"line-through\", \"overline\", \"underline\"]),\n  textTransform: PropTypes.oneOf([\"capitalize\", \"lowercase\", \"uppercase\"]),\n  fontWeight: PropTypes.oneOf([\"normal\", \"bold\"])\n};\nText.defaultProps = { ...defaultProps\n};\nexport default Text;","map":{"version":3,"sources":["/Users/heintze/Documents/GitHub/meeting-queue-app/src/components/Text/index.js"],"names":["styled","PropTypes","textColor","typography","fontSize","defaultProps","color","primary","display","fontFamily","letterSpacing","lineHeight","fontStyle","Text","span","props","customSize","textAlign","textDecoration","textTransform","fontWeight","wordBreak","cursor","pointerEvents","propTypes","string","number","oneOf","Object","keys"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,cAArC;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAEJ,SAAS,CAACK,OADS;AAE1BC,EAAAA,OAAO,EAAE,OAFiB;AAG1BC,EAAAA,UAAU,EAAE,MAHc;AAI1BL,EAAAA,QAAQ,EAAE,MAJgB;AAK1BM,EAAAA,aAAa,EAAEP,UAAU,CAACO,aALA;AAM1BC,EAAAA,UAAU,EAAER,UAAU,CAACQ,UANG;AAO1BC,EAAAA,SAAS,EAAE;AAPe,CAArB;AAUP,MAAMC,IAAI,GAAGb,MAAM,CAACc,IAAK;AACzB,WAAYC,KAAD,IAAWA,KAAK,CAACT,KAAM;AAClC,aAAcS,KAAD,IAAWA,KAAK,CAACP,OAAQ;AACtC,eAAgBO,KAAD,IACXA,KAAK,CAACC,UAAN,GAAoB,GAAED,KAAK,CAACC,UAAW,IAAvC,GAA8C,GAAEZ,QAAQ,CAACW,KAAK,CAACX,QAAP,CAAiB,EAAE;AAC/E,gBAAiBW,KAAD,IAAWA,KAAK,CAACH,SAAU;AAC3C,oBAAqBG,KAAD,IAAY,GAAEA,KAAK,CAACL,aAAc,IAAI;AAC1D,iBAAkBK,KAAD,IAAWA,KAAK,CAACJ,UAAW;AAC7C;AACA,gBAAiBI,KAAD,IAAWA,KAAK,CAACE,SAAU;AAC3C,qBAAsBF,KAAD,IAAWA,KAAK,CAACG,cAAe;AACrD,oBAAqBH,KAAD,IAAWA,KAAK,CAACI,aAAc;AACnD,iBAAkBJ,KAAD,IAAWA,KAAK,CAACK,UAAW;AAC7C,gBAAiBL,KAAD,IAAWA,KAAK,CAACM,SAAU;AAC3C,YAAaN,KAAD,IAAWA,KAAK,CAACO,MAAO;AACpC,oBAAqBP,KAAD,IAAWA,KAAK,CAACQ,aAAc;AACnD,CAhBA;AAkBAV,IAAI,CAACW,SAAL,GAAiB;AACflB,EAAAA,KAAK,EAAEL,SAAS,CAACwB,MADF;AAEfT,EAAAA,UAAU,EAAEf,SAAS,CAACyB,MAFP;AAEe;AAC9BlB,EAAAA,OAAO,EAAEP,SAAS,CAAC0B,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,cAApB,CAAhB,CAHM;AAIflB,EAAAA,UAAU,EAAER,SAAS,CAAC0B,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAhB,CAJG;AAKfvB,EAAAA,QAAQ,EAAEH,SAAS,CAAC0B,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYzB,QAAZ,CAAhB,CALK;AAMfM,EAAAA,aAAa,EAAET,SAAS,CAACyB,MANV;AAOff,EAAAA,UAAU,EAAEV,SAAS,CAACyB,MAPP;AAQfT,EAAAA,SAAS,EAAEhB,SAAS,CAAC0B,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,EAA4B,SAA5B,CAAhB,CARI;AASfT,EAAAA,cAAc,EAAEjB,SAAS,CAAC0B,KAAV,CAAgB,CAAC,cAAD,EAAiB,UAAjB,EAA6B,WAA7B,CAAhB,CATD;AAUfR,EAAAA,aAAa,EAAElB,SAAS,CAAC0B,KAAV,CAAgB,CAAC,YAAD,EAAe,WAAf,EAA4B,WAA5B,CAAhB,CAVA;AAWfP,EAAAA,UAAU,EAAEnB,SAAS,CAAC0B,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,CAAhB;AAXG,CAAjB;AAcAd,IAAI,CAACR,YAAL,GAAoB,EAClB,GAAGA;AADe,CAApB;AAIA,eAAeQ,IAAf","sourcesContent":["/**\n *\n * Text\n *\n */\n\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { textColor } from \"./theme\";\nimport typography, { fontSize } from \"./typography\";\n\nexport const defaultProps = {\n  color: textColor.primary,\n  display: \"block\",\n  fontFamily: \"Lato\",\n  fontSize: \"main\",\n  letterSpacing: typography.letterSpacing,\n  lineHeight: typography.lineHeight,\n  fontStyle: \"normal\",\n};\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n  display: ${(props) => props.display};\n  font-size: ${(props) =>\n    props.customSize ? `${props.customSize}px` : `${fontSize[props.fontSize]}`};\n  font-style: ${(props) => props.fontStyle};\n  letter-spacing: ${(props) => `${props.letterSpacing}px`};\n  line-height: ${(props) => props.lineHeight};\n  margin: 0;\n  text-align: ${(props) => props.textAlign};\n  text-decoration: ${(props) => props.textDecoration};\n  text-transform: ${(props) => props.textTransform};\n  font-weight: ${(props) => props.fontWeight};\n  word-break: ${(props) => props.wordBreak};\n  cursor: ${(props) => props.cursor};\n  pointer-events: ${(props) => props.pointerEvents};\n`;\n\nText.propTypes = {\n  color: PropTypes.string,\n  customSize: PropTypes.number, // custom size, not recommended to be used for consistency\n  display: PropTypes.oneOf([\"block\", \"inline\", \"inline-block\"]),\n  fontFamily: PropTypes.oneOf([\"bold\", \"light\", \"main\"]),\n  fontSize: PropTypes.oneOf(Object.keys(fontSize)),\n  letterSpacing: PropTypes.number,\n  lineHeight: PropTypes.number,\n  textAlign: PropTypes.oneOf([\"left\", \"center\", \"right\", \"justify\"]),\n  textDecoration: PropTypes.oneOf([\"line-through\", \"overline\", \"underline\"]),\n  textTransform: PropTypes.oneOf([\"capitalize\", \"lowercase\", \"uppercase\"]),\n  fontWeight: PropTypes.oneOf([\"normal\", \"bold\"]),\n};\n\nText.defaultProps = {\n  ...defaultProps,\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}